$ npx hardhat test test/TestSimpleCurve.js > results/TestSimpleCurve.txt


  TestSimpleCurve
        --- Test 1 - Increasing rates ---
        pointsLength: 4
        point(0): 2 => 20
        point(1): 5 => 50
        point(2): 10 => 100
        point(3): 100 => 1000
        getRate(1): 20, expected: 20
        getRate(2): 20, expected: 20
        getRate(3): 30, expected: 30
        getRate(5): 50, expected: 50
        getRate(7): 70, expected: 70
        getRate(10): 100, expected: 100
        getRate(100): 1000, expected: 1000
        getRate(101): 1000, expected: 1000
        getRate(10000): 1000, expected: 1000
        --- Test 2 - Decreasing rates ---
        pointsLength: 5
        point(0): 2 => 10
        point(1): 4 => 8
        point(2): 6 => 6
        point(3): 8 => 4
        point(4): 10 => 2
        getRate(1): 10, expected: 10
        getRate(2): 10, expected: 10
        getRate(3): 9, expected: 9
        getRate(4): 8, expected: 8
        getRate(5): 7, expected: 7
        getRate(6): 6, expected: 6
        getRate(7): 5, expected: 5
        getRate(8): 4, expected: 4
        getRate(9): 3, expected: 3
        getRate(10): 2, expected: 2
        getRate(11): 2, expected: 2
        --- Test 3 - Unixtime and BigNumber ---
        pointsLength: 2
        point(0): 1604716674 => 1000000000000000000000000
        point(1): 1604736674 => 2000000000000000000000000
        getRate(1604716674): 1000000000000000000000000, expected: 1000000000000000000000000
        getRate(1604726674): 1500000000000000000000000, expected: 1500000000000000000000000
        getRate(1604726675): 1500050000000000000000000, expected: 1500050000000000000000000
        getRate(1604726684): 1500500000000000000000000, expected: 1500500000000000000000000
        getRate(1604726774): 1505000000000000000000000, expected: 1505000000000000000000000
        getRate(1604727674): 1550000000000000000000000, expected: 1550000000000000000000000
        --- Test Completed ---

    âœ“ TestSimpleCurve - #0 (1766ms)


  1 passing (2s)

